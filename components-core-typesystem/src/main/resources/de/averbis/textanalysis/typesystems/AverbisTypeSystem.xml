<?xml version="1.0" encoding="UTF-8"?>
<typeSystemDescription xmlns="http://uima.apache.org/resourceSpecifier">
	<name>de.averbis.textanalysis.typesystems.AverbisTypeSystem</name>
	<description>The core type system for all default components.</description>
	<version>${project.version}</version>
	<vendor>Averbis GmbH</vendor>
	<imports>
		<import name="de.averbis.textanalysis.typesystems.AverbisInternalTypeSystem" />
	</imports>
	<types>
		<typeDescription>
			<name>de.averbis.extraction.types.Sentence</name>
			<description>Annotation representing a sentence including the ending punctuation mark.
			</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Token</name>
			<description>Annotation for basic textual units including word, numbers and punctuation marks.
			</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>posTag</name>
					<description>The part of speech of this token (i.a. used for concept annotator to be restricted
						to certain pos types).</description>
					<rangeTypeName>de.averbis.extraction.types.POSTag</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>segments</name>
					<description>Segments of this token (i.a. used for respective mode in concept annotator).
					</description>
					<rangeTypeName>uima.cas.FSArray</rangeTypeName>
					<elementType>de.averbis.extraction.types.Segment</elementType>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
				<featureDescription>
					<name>stem</name>
					<description>The stem of the token (i.a. used for respective mode in concept annotator).
					</description>
					<rangeTypeName>de.averbis.extraction.types.Stem</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>isAbbreviation</name>
					<description>Marker whether the token is (part of) an abbreviation.</description>
					<rangeTypeName>uima.cas.Boolean</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>abbreviations</name>
					<description>The abbreviations for the token; this may be used as replacement in concept
						annotator. Note, that this goes in combination with "isAbbreviation" marking whether the token
						is an abbreviation.
						Multiple entries mean that there is ambiguity which full form is correct. There will be components to
						resolve this ambiguity which then remove wrong forms.
						Components which cannot do this ambiguity resolution must rely that the first (and hopefully only) entry
						is correct!
					</description>
					<rangeTypeName>uima.cas.FSArray</rangeTypeName>
					<elementType>de.averbis.extraction.types.Abbreviation</elementType>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
				<featureDescription>
					<name>ignoreByConceptMapper</name>
					<description>If this feature is true then the ConceptAnnotator
						ignores the token. Use this is a pre-processing
						component has already identified the semantic of
						the token. E.g. dates, times, measurement values.
						Default value: false
					</description>
					<rangeTypeName>uima.cas.Boolean</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>normalized</name>
					<description>Normalized version of this token (usually lower-case, without special characters
						and number).
					</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>diacriticsFreeVersions</name>
					<description>In the case that the normalized version contains diacritics, multiple versions
						without diacritics are stored in this array.
					</description>
					<rangeTypeName>uima.cas.StringArray</rangeTypeName>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
				<featureDescription>
					<name>isStopword</name>
					<description>Indicates if the token is a stopword.</description>
					<rangeTypeName>uima.cas.Boolean</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>lemma</name>
					<description>The Lemma of the token.</description>
					<rangeTypeName>de.averbis.extraction.types.Lemma</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>isInvariant</name>
					<description>Defines whether a token is an invariant. Such a token should not undergo some
						morphologic analysis steps, such as stemming and/or decompounding.
						However, lemmatization might still be allowed.
						Typical invariants: IL-2 (gene name) or also product names or numbers (SR-2715) but also too short
						words (au).
					</description>
					<rangeTypeName>uima.cas.Boolean</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>tokenClass</name>
					<description>The optional string representing the class of the token concerning its surface
						form.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Abbreviation</name>
			<description>An abbreviation is a letter or group of letters, taken from a word or words. For
				example, the word "abbreviation" can be abbreviated as "abbr." or "abbrev."</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>fullForm</name>
					<description>The full form of an abbreviation. The full form, for example for HLA could be
						human leukocyte antigen.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>textReference</name>
					<description>Reference to the text span that contains the full form of the
						abbreviation/acronym.</description>
					<rangeTypeName>de.averbis.extraction.types.CoreAnnotation</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>definedHere</name>
					<description>This feature is true if the abbreviation/acronym is defined for the first time in
						the text, e.g. in "interleukin 2 (Il-2) receptor", it can be true only for locally introduced
						abbreviations/acronyms.</description>
					<rangeTypeName>uima.cas.Boolean</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>stems</name>
					<description>Stems of the full form.</description>
					<rangeTypeName>uima.cas.StringArray</rangeTypeName>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
				<featureDescription>
					<name>segments</name>
					<description>Segments of the full form.</description>
					<rangeTypeName>uima.cas.StringArray</rangeTypeName>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
				<featureDescription>
					<name>tokens</name>
					<description>Token strings of the full form.</description>
					<rangeTypeName>uima.cas.StringArray</rangeTypeName>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Concept</name>
			<description>A concept is a reference to an entry in a database, terminology, taxonomy, ontology
				etc.</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>dictCanon</name>
					<description>Canonical form (preferred term).</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>enclosingSpan</name>
					<description>The span that this concept is contained within (i.e. its sentence).</description>
					<rangeTypeName>de.averbis.extraction.types.CoreAnnotation</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>negatedBy</name>
					<description>Indicates which annotation negates the concept.</description>
					<rangeTypeName>de.averbis.extraction.types.CoreAnnotation</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>partialMatch</name>
					<description>Specifies if the annotation matches the complete context.
						E.g. if coveredText is "Lungenabschnitte" and the generated Concept annotation is "Lunge", then
						this value is set to true.
					</description>
					<rangeTypeName>uima.cas.Boolean</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>matchedText</name>
					<description>The text in document which matched the synonym (in the respective mapping mode
						form, i.e., segment/stem/original etc.).</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>matchedTerm</name>
					<description>The synonym of the concept which caused the match (in the
						ConceptAnnotator-dictionary this is &lt;term label=xxx&gt;).</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>matchedVariant</name>
					<description>The variant of the synonym of the concept which caused the match (in the
						ConceptAnnotator-dictionary this is &lt;variant label=xxx&gt;).
						Note that one synonym (matchedTerm) can have several variants (i.e. spelling forms or mapping
						forms).
					</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>matchedTokens</name>
					<description>The Token annotations on which the concept was found.
						Note that there is also matchedAnnotations which list the actual annotations involved in the
						matching process (i.e., token, stem, segment, etc.).
					</description>
					<rangeTypeName>uima.cas.FSArray</rangeTypeName>
					<elementType>de.averbis.extraction.types.Token</elementType>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
				<featureDescription>
					<name>matchedAnnotations</name>
					<description>List of the actual annotations involved in the matching process (i.e., original,
						stem, segment, etc.).
						Note that there is also matchedTokens, which lists only matching Token annotations.
					</description>
					<rangeTypeName>uima.cas.FSArray</rangeTypeName>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
				<featureDescription>
					<name>mappingMode</name>
					<description>The mode used for mapping (e.g., original, stem, segment...).</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>mappingFuzzynessScore</name>
					<description>The score for the fuzzyness of the mapping (higher scores mean higher fuzzyness,
						i.e., less exact mappings).</description>
					<rangeTypeName>uima.cas.Float</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>uniqueID</name>
					<description>The unique concept id, including terminology name and concept ID
						should look like this: &lt;terminologyName&gt;:&lt;conceptID&gt;.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>conceptID</name>
					<description>The concept id. For a unique id refer to uniqueID.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>source</name>
					<description>The name of the terminology source.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Zone</name>
			<description>An annotation concerning the document structure, e.g. header, title, abstract, etc.
			</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>label</name>
					<description>Allows to annotated the Zone with a semantic label.
						E.g. in the case of a section the value might be
						Introduction, Appendix,...
					</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>weight</name>
					<description>The relevance or weight for a zone; used e.g. to weight information contained in
						the respective zone.</description>
					<rangeTypeName>uima.cas.Float</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Header</name>
			<description>The header annotation of a document</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>docID</name>
					<description>The ID of the document.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>source</name>
					<description>The source of the document.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>path</name>
					<description>The path of the document.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>fileName</name>
					<description>The name of the source file (often used by cas consumers which produce an output
						file for each CAS; this name is used as base).</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>fileEncoding</name>
					<description>The encoding of the file.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>documentIndex</name>
					<description>The current number of the documents, i.e. a document is number 5 in a complete
						sequence.</description>
					<rangeTypeName>uima.cas.Integer</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>lastFile</name>
					<description>Indicates if this is the last file.</description>
					<rangeTypeName>uima.cas.Boolean</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>sourceLanguage</name>
					<description>The document language of the source.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>offsetInSource</name>
					<description>Byte offset of the start of document content within original source file or other
						input source. Only used if the CAS document was retrieved from an source where one physical
						source file contained several conceptual documents. Zero otherwise.</description>
					<rangeTypeName>uima.cas.Integer</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>documentSize</name>
					<description>Size of original document in bytes before processing by CAS Initializer. Either
						absolute file size of size within file or other source.</description>
					<rangeTypeName>uima.cas.Integer</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>sequenceNumber</name>
					<description>Sequence number to test the right order while merging CASes.</description>
					<rangeTypeName>uima.cas.Integer</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>lastSegment</name>
					<description>For a CAS that represents a segment of a larger source document, this flag
						indicates whether this CAS is the final segment of the source document. This is useful for
						downstream components that want to take some action after having seen all of the segments of a
						particular source document.</description>
					<rangeTypeName>uima.cas.Boolean</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.POSTag</name>
			<description>Parent type for all specific part-of-speech types.</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>tagsetId</name>
					<description>The name of the tag set the pos tag belongs to; e.g. the "Penn Treebank II Tags"
						(see http://bulba.sdsu.edu/jeanette/thesis/PennTags.html)</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>value</name>
					<description>The specific part-of-speech tag, as returned by the POS-Tagger (e.g., "NN" or
						"ADJ" etc)</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Chunk</name>
			<description>A general type for chunks (NPs, VPs, PPs etc.).
				Note: there are 3 specific subtypes for common chunks: ChunkNP, ChunkVP, ChunkPP.
				For all other chunk types (e.g., SBAR; ADJP etc.) use this general type!
			</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>enclosedTokens</name>
					<description>The Token annotations enclosed by this chunk.</description>
					<rangeTypeName>uima.cas.Integer</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>head</name>
					<description>The head entity on which this chunk grammatically depends. Example: in "Der Vater
						des Kindes" is "der Vater" the head of "des Kindes".</description>
					<rangeTypeName>de.averbis.extraction.types.CoreAnnotation</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>dependents</name>
					<description>The entities which grammatically depend on this chunk. Example: in "Der Vater des
						Kindes" is "des Kindes" the dependent of "Der Vater".</description>
					<rangeTypeName>uima.cas.FSArray</rangeTypeName>
					<elementType>de.averbis.extraction.types.CoreAnnotation</elementType>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
				<featureDescription>
					<name>value</name>
					<description>The specific chunk tag as returned by the chunker (e.g., "NP", "SBAR", "S" etc.).
					</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.ChunkNP</name>
			<description>A noun phrase (e.g. "the strange bird").</description>
			<supertypeName>de.averbis.extraction.types.Chunk</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.ChunkVP</name>
			<description>A verb phrase (e.g. "has been thinking").</description>
			<supertypeName>de.averbis.extraction.types.Chunk</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.ChunkPP</name>
			<description>A prepositional phrase (e.g. "in between").</description>
			<supertypeName>de.averbis.extraction.types.Chunk</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Segment</name>
			<description>The segmentation of a text part; a segment is usually a subword (i.e., part of a
				token).</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>value</name>
					<description>The string representation of the segment.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>isValidSegmentation</name>
					<description>Indicates if the segmentation is valid (viz. could be completely matched against
						the dictionary).</description>
					<rangeTypeName>uima.cas.Boolean</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>midStrings</name>
					<description>The MID value, multiple for ambiguous MIDs (for MID see Morphosaurus Paper).
					</description>
					<rangeTypeName>uima.cas.StringArray</rangeTypeName>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Section</name>
			<description>Text sections of a certain type.</description>
			<supertypeName>de.averbis.extraction.types.Zone</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Abstract</name>
			<description>Semantic abstract section found in the text.</description>
			<supertypeName>de.averbis.extraction.types.Zone</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Paragraph</name>
			<description>Different paragraphs found in the document.</description>
			<supertypeName>de.averbis.extraction.types.Zone</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Title</name>
			<description>Marks a title in the document.</description>
			<supertypeName>de.averbis.extraction.types.Zone</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Relation</name>
			<description>Describes a binary relation between two annotations.
				The relation is defined according to the SPO (subject, predicate, object) annotation.
			</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>subject</name>
					<description>An annotation representing the subject of the relation ("agens").</description>
					<rangeTypeName>de.averbis.extraction.types.CoreAnnotation</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>predicate</name>
					<description>The annotation representing the predicate of the relation
						e.g.
						BASF has integrated BAYER
						--&gt; 'has integrated' is the predicate that is marked as ChunkVP
						--&gt; use the feature 'value' to define the type of the relation
						--&gt; value: acquisition</description>
					<rangeTypeName>de.averbis.extraction.types.CoreAnnotation</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>object</name>
					<description>The object of the relation.</description>
					<rangeTypeName>de.averbis.extraction.types.CoreAnnotation</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>value</name>
					<description>Type of the relation.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Entity</name>
			<description>A named entity; not to be confused with a Concept. A (named) entity is a string
				representation in text referring to a class of entities. Thus, the entity mention does not have
				an identifier but a specific type (the category) assigned to it.</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>value</name>
					<description>This feature provides the text of the annotated mention. Important for easily
						representing discontinuous mentions such as 'T cell' in the expression 'T and B cell'.
					</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>label</name>
					<description>The type of the entity; e.g., PERSON, LOCATION etc.
						Feature name is label due to the fact that "type" is a reserved word.
					</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>parsedElements</name>
					<description>Reference to all recognized entities inside this Entity such as Size, Time, Area,
						Date, Volume, ....</description>
					<rangeTypeName>uima.cas.FSArray</rangeTypeName>
					<elementType>de.averbis.extraction.types.Entity</elementType>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.ResolvedEntity</name>
			<description>A special entity with an additional specific resolved form.</description>
			<supertypeName>de.averbis.extraction.types.Entity</supertypeName>
			<features>
				<featureDescription>
					<name>resolvedType</name>
					<description>The type of the resolved form.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>resolvedForm</name>
					<description>A string representing the resolved form of the entity.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Group</name>
			<description>Groups together a set of annotations that belong together, e.g., enumerations. One
				of them can be set to the "leading" concept.
				E.g. "the liver metastasis is hypodense and has a size of 3cm*2cm".
				lead: metastasis, other concepts: liver, hypodense, 3cm*2cm
			</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>leadingAnnotation</name>
					<description>Optional annotation indicating the leading head of hte group.</description>
					<rangeTypeName>de.averbis.extraction.types.CoreAnnotation</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>members</name>
					<description>Annotations contained in the group.</description>
					<rangeTypeName>uima.cas.FSArray</rangeTypeName>
					<elementType>de.averbis.extraction.types.CoreAnnotation</elementType>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
				<featureDescription>
					<name>label</name>
					<description>Textual label describing the group elements.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Enumeration</name>
			<description>A specific group representing an enumeration like "red, blue and green".
			</description>
			<supertypeName>de.averbis.extraction.types.Group</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Listing</name>
			<description>A specific group representing a listing like "1. red 2. blue 3. green".
			</description>
			<supertypeName>de.averbis.extraction.types.Group</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.InputParam</name>
			<description>InputParam is used to pass parameters to an analysis engine via a JCas object. This
				may be used to pass parameters
				in the process() method of an analysis engine rather than during initialization of the AEs. It is
				e.g. necessary
				for the ConceptAnnotator at which you want to pass restrictions (such as "language" or
				"terminology") for each single
				text/jcas while only having one ConceptAnnotator instance.
			</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>key</name>
					<description>The key of the input parameter.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>values</name>
					<description>The values of the input parameter.</description>
					<rangeTypeName>uima.cas.StringArray</rangeTypeName>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Stem</name>
			<description>The type for stem annotations.</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>value</name>
					<description>The string representation of the stem.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Category</name>
			<description>Category meta information on the document or a region of this document (use the
				context feature to identify which section this category refers to). E.g. language information of
				the document text or language information of specific sections.</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>group</name>
					<description>The category group (e.g. HSG, language) to which from which the label belongs.
						For language categorization the group might be "lang" and then the labels could be "en", "de",
						"fr" etc.
					</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>label</name>
					<description>The label of the category annotation. E.g. in the case that we identified
						languages (de, en, fr, ...).</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>context</name>
					<description>The text context which belongs to the given category annotation, e.g. Document,
						Section, Sentence.</description>
					<rangeTypeName>de.averbis.extraction.types.CoreAnnotation</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>rank</name>
					<description>The rank of the current category with respect to the context.</description>
					<rangeTypeName>uima.cas.Integer</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.SummarySentence</name>
			<description>Annotation indicating a sentence that makes up a summary of the document.
			</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>sentence</name>
					<description>The sentence annotation that contains the content of this summary sentence.
					</description>
					<rangeTypeName>de.averbis.extraction.types.Sentence</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>descriptors</name>
					<description>The descriptors extracted by the algorithm accounting to the selection of the
						sentence.</description>
					<rangeTypeName>uima.cas.FSArray</rangeTypeName>
					<elementType>de.averbis.extraction.types.Descriptor</elementType>
					<multipleReferencesAllowed>true</multipleReferencesAllowed>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.IndexTerm</name>
			<description>A term to be used for indexing a document.</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>value</name>
					<description>The string representation of the index term. Example: the normalized and stemmed
						string which represents a keyword in the free keywording scenario or for controlled keywording
						(=descriptor extraction) the dictCanon might be written here.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>baseAnnotation</name>
					<description>The annotation to be assigned as index term. This can i.e. be a Concept or a Noun
						Phrase annotation from which the index term was derived.</description>
					<rangeTypeName>de.averbis.extraction.types.CoreAnnotation</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Descriptor</name>
			<description>An index term from an ontology; its type (or reference) is written in the feature
				annotation.</description>
			<supertypeName>de.averbis.extraction.types.IndexTerm</supertypeName>
			<features>
				<featureDescription>
					<name>uid</name>
					<description>The unique identifier of the descriptor, e.g., a combination of terminology and
						concept id.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Keyword</name>
			<description>A keyword that is assigned freely (i.e., not taken from an ontology) to a document.
				Its type is written in the feature annotation</description>
			<supertypeName>de.averbis.extraction.types.IndexTerm</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.GenericMetadata</name>
			<description>Type holding generic metadata information of a document. Multiple annotations should
				be used to add additional metadata to the CAS.</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>metadataFieldname</name>
					<description>To reduce the potential metadata field names, the predefined field names should be
						used where possible (add new field names if necessary).
						Predefined metadata field names are: title, summary, filesize, annotatorName.
					</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>value</name>
					<description>Value of the metadata field, e.g.
						metadataFieldname = title,
						value = "Brave new world".
					</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.POSTagNoun</name>
			<description>The type for all POS-Tags of the type "Noun".</description>
			<supertypeName>de.averbis.extraction.types.POSTag</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.POSTagVerb</name>
			<description>The type for all POS-Tags of the type "Verb".</description>
			<supertypeName>de.averbis.extraction.types.POSTag</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.POSTagAdj</name>
			<description>The type for all POS-Tags of the type "Adjective".</description>
			<supertypeName>de.averbis.extraction.types.POSTag</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.POSTagAdv</name>
			<description>The type for all POS-Tags of the type "Adverb".</description>
			<supertypeName>de.averbis.extraction.types.POSTag</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.POSTagPron</name>
			<description>The type for all POS-Tags of the type "Pronoun".</description>
			<supertypeName>de.averbis.extraction.types.POSTag</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.POSTagDet</name>
			<description>The type for all POS-Tags of the type "Determiner".</description>
			<supertypeName>de.averbis.extraction.types.POSTag</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.POSTagAdp</name>
			<description>The type for all POS-Tags of the type "Preposition/Postposition".</description>
			<supertypeName>de.averbis.extraction.types.POSTag</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.POSTagNum</name>
			<description>The type for all POS-Tags of the type "Numeral".</description>
			<supertypeName>de.averbis.extraction.types.POSTag</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.POSTagConj</name>
			<description>The type for all POS-Tags of the type "Conjunction".</description>
			<supertypeName>de.averbis.extraction.types.POSTag</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.POSTagPart</name>
			<description>The type for all POS-Tags of the type "Particle".</description>
			<supertypeName>de.averbis.extraction.types.POSTag</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.POSTagPunct</name>
			<description>The type for all POS-Tags of the type "Punctuation".</description>
			<supertypeName>de.averbis.extraction.types.POSTag</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.ValidTextSegment</name>
			<description>Zone to mark valid text in contrast to invalid text which e.g. may be OCR (Optical
				Character Recognition) artefacts, number blocks, tables etc.</description>
			<supertypeName>de.averbis.extraction.types.Zone</supertypeName>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Lemma</name>
			<description>Lemma is the canonical form of a lexeme. Lemmata can be retrieved from lexicon or be
				produced by lemmatizer.</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>value</name>
					<description>The value of the lemma.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>case</name>
					<description>Case such as Nom (Nominative) or Gen (Genitive) etc.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>number</name>
					<description>Singular or plural.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>gender</name>
					<description>fem or masc or neutr.</description>
					<rangeTypeName>uima.cas.String</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>
		<typeDescription>
			<name>de.averbis.extraction.types.Member</name>
			<description>Utility annotation for indicating a member of a group.</description>
			<supertypeName>de.averbis.extraction.types.CoreAnnotation</supertypeName>
		</typeDescription>
	</types>
</typeSystemDescription>
